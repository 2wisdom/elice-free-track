"""
엘리스 토끼의 수학 숙제

수학을 정말 싫어하는 엘리스 토끼는 수학 선생님에게 1부터 N까지의 합의 제곱을 구해오라는 숙제를 받았습니다. 그런데 엘리스 토끼가 실수로 합의 제곱이 아닌 제곱의 합을 구해버렸습니다.

예를 들어, 3까지의 합의 제곱이라면 (1+2+3)2=36(1+2+3)^2 = 36(1+2+3) 
2
 =36인데 12+22+32=141^2+2^2+3^2 = 141 
2
 +2 
2
 +3 
2
 =14로 구해버렸습니다.

이에 수학 선생님은 정답과 엘리스 토끼의 답의 차이만큼 벌을 주려고 합니다.

지시사항을 참고하여 코드를 작성하세요.

지시사항
1. 사용자로부터 자연수를 입력받아 아래 수식을 참고하여 1부터 입력받은 수까지의 합의 제곱과 제곱의 합의 차이를 출력하세요.
"""
# 지시사항을 참고하여 코드를 작성하세요.

N = int(input())

#합의 제곱 (1 + 2 + 3 + ・・・ 8 + 9 + N)$^2$ 
num1 = 0
sum1 = 0
for i in range(N) :
    num1 = num1 + 1
    sum1 = sum1 + num1
var1 = (sum1)**2

#제곱의 합 1$^2$ + 2$^2$ + 3$^2$ + ・・・ 8$^2$ + 9$^2$ + N$^2$
num2 = 0
sum2 = 0
for i in range(N) :
    num2 = (num2) + 1
    sum2 = sum2 + (num2 ** 2)
var2 = sum2

print(var1 - var2) #var1 합의 제곱/ var2 제곱의 합


"""
구슬 꾸러미

엘리스 토끼는 구슬 장사를 위해 구슬을 꾸러미에 담아 포장을 하고 있습니다. 엘리스 토끼가 준비한 구슬은 색상별로 무게가 모두 다르며 구슬 꾸러미 또한 구슬을 담아낼 수 있는 무게가 모두 달라 최소한의 구슬 개수를 활용해 꾸러미를 채우려고 합니다.

색깔과 무게가 다른 3가지 종류의 구슬이 무제한으로 주어집니다.

구슬	무게
빨간 구슬	250g
파란 구슬	40g
흰 구슬	10g
예를 들어 300g300g300g의 꾸러미를 만들기 위해서는 빨간 구슬 111개, 파란 구슬 111개, 흰 구슬 111개로 최소 333개의 구슬이 필요합니다.

지시사항을 참고하여 코드를 작성하세요.


지시사항
1. 사용자로부터 구슬 꾸러미의 무게를 입력받고 꾸러미를 만드는 데 사용되는 최소 구슬의 수를 출력하세요.
(1≤구슬 꾸러미 무게≤10,000)(1 ≤ 구슬\ 꾸러미\ 무게 ≤ 10,000)(1≤구슬 꾸러미 무게≤10,000)

만약 무게에 맞추어 꾸러미를 만들 수 없는 경우에는 -1을 출력하세요.
"""
# 지시사항을 참고하여 코드를 작성하세요.

tmp = int(input())
count = 0 # 꾸러미
remain = tmp

a = 250
b = 40
c = 10

while True :
    if remain >= a :
        remain = remain - a
        count = count + 1
    elif remain >= b :
        remain = remain - b
        count = count + 1
    elif remain >= c :
        remain = remain - c
        count = count + 1
    elif remain <= 0 :
        print(count)
        break
    else :
        print('-1')
        break


"""
마천루

코더랜드의 유능한 건축가 엘리스 토끼는 모자장수로부터 새로운 사업을 제안 받았습니다.

바로 코더랜드 한가운데 마천루를 지어 관광객을 유치하는 사업이였습니다.

지시사항을 참고하여 코드를 작성하세요.


지시사항
1. 마천루의 높이를 사용자로부터 입력받아 아래의 조건을 참고하여 사용자가 입력한 만큼의 높이를 가지는 마천루를 출력하세요.
2. 상위 1~5층은 각각 1, 2, 3, 4, 5개의 *로 구성되어있습니다.
3. 6층부터는 5개의 *로 구성되어있습니다.
"""
# 지시사항을 참고하여 코드를 작성하세요.

num = int(input())

star = 1
for i in range(num) : #num만큼 반복 !
    print('*' * star)
    if star > 4 :
        break
    star = star + 1
for j in range(num-5) :
    print('*' * 5)


"""
문자열 앞뒤 검사하기

회문(Palindrome)은 토마토맛토마토, 다시합창합시다와 같이 앞에서 읽으나 뒤에서 읽으나 같은 문자열을 의미합니다. 엘리스 토끼는 이런 회문을 검사하는 기계를 만들려고 합니다.

회문 검사 방식은 아래와 같습니다.
아래처럼 길이가 nnn인 문자열이 입력으로 주어집니다.
이때, 111번째 글자와 nnn번째 글자가 같은지 다른지를 비교합니다. 계속해서 222번째 글자와 n−1n-1n−1번째 글자, 333번째 글자와 n−2n-2n−2번째 글자 순서로 비교합니다.

지시사항을 참고하여 코드를 작성하세요.


지시사항
1. 사용자로부터 문자열을 입력받고 문자열의 앞에서 iii번째 문자와 뒤에서 iii번째 문자가 같은지 비교한 후 두 문자가 같다면 Same을, 다르다면 Different를 출력합니다.
"""
# 지시사항을 참고하여 코드를 작성하세요.

my_str = str(input())

first = 0
last = -1
N = len(my_str) // 2

for i in range(N) : #my_str을 2로 나눈것만큼만 반복했음 좋겠엉,,
    if my_str[first] == my_str[last] :
        print('Same')
    else :
        print('Different')
    first = first + 1
    last = last - 1


"""
어서오세요! 커피전문점 수타박수입니다!

세계에서 가장 맛있는 커피를 파는 수타박수에서는 매일 많은 사람들이 커피를 마시기 위해 방문하는 장소입니다.

엘리스 토끼는 보다 정확한 금액을 계산하기 위해 계산기를 만드려고 합니다.

수타박수의 메뉴와 가격은 아래와 같습니다.

음료 종류	Price
아메리카노	4100
카페라떼	4600
카라멜마끼아또	5100
지시사항을 참고하여 코드를 작성하세요.

지시사항
1. 사용자로부터 손님의 수를 입력 받습니다.

2. 입력받은 손님의 수 만큼 음료 주문을 받습니다.
손님은 음료 명으로 주문을 합니다.
주문은 수타박수에서 판매 중인 음료만 받습니다.

3. 주문한 메뉴의 총 가격을 출력합니다.
"""
# 지시사항 1번을 참고하여 코드를 작성하세요.
guest = int(input())

# 지시사항 2번을 참고하여 코드를 작성하세요.

total = 0
menu = {'아메리카노':4100, '카페라떼':4600, '카라멜마끼아또':5100}

for i in range(guest) :
    order = input()
    if order == '아메리카노' :
        total = total + menu['아메리카노']
    elif order == '카페라떼' :
        total = total + menu['카페라떼']
    elif order == '카라멜마끼아또' :
        total = total + menu['카라멜마끼아또']

# 지시사항 3번을 참고하여 코드를 작성하세요.
print(total)


"""
반쪽짜리 피라미드

엘리스 토끼는 사용자가 입력한 숫자만큼 높이를 가지는 반쪽 피라미드를 만들어주는 프로그램을 만들려고 합니다.

지시사항을 참고하여 코드를 작성하세요.


지시사항
1. 사용자로부터 자연수를 입력받고 입력된 숫자만큼 높이를 가지는 반쪽 피라미드를 출력하세요.
"""
# 지시사항을 참고하여 코드를 작성하세요.
n = int(input())

star = 1

for i in range(n):
    print((' ' * (n-star)) + ('*' * star))
    star = star + 1


"""
더치페이 계산하기

A, B, C 세명의 친구는 점심을 함께 먹고 각자 먹은 메뉴에 따라 계산하기로 했습니다.

세명의 친구가 각각 메뉴를 하나씩만 주문했다면 쉽게 계산이 가능했겠지만, B는 2개의 메뉴를 주문하고 C는 3개를 주문했습니다.

거기에 세명이 함께 먹는 사이드메뉴까지 포함되어 있어서 이를 반영해서 각자 지불할 금액을 계산하는 프로그램을 만드려고 합니다.

지시사항을 참고하여 A, B, C 가 각각 지불해야하는 금액을 출력하는 프로그램을 제작하세요.


지시사항
1.menu 라는 딕셔너리에 메뉴명을 키로, 메뉴의 가격을 값으로 저장되어 있습니다.

2. 이들이 주문한 내역은 먹은사람,메뉴이름,수량의 형태로 사용자로부터 입력받습니다. 만약 세명이 다같이 먹은 메뉴라면 K로 표시합니다.

3. -1을 입력하면 입력을 중단합니다.

4. 각자 지불할 금액을 계산하여 아래와 같이 출력합니다.
"""
menu={"떡볶이":5000,
"김밥":2000,
"튀김세트":3000,
"순대":4000,
"라면":6000,
"콜라":1000,
"사이다":1000
}

a=0 # A가 먹은 금액
b=0 # B가 먹은 금액
c=0 # C가 먹은 금액

k=0 # 함께 먹은 금액

while True:
    # 좌측의 지시사항 2번, 3번을 구현하세요
    order = list(input().split(',')) #[A,라면,1]
    if order[0] == 'A' :
        a = a + int(menu[order[1]]) * int(order[2])
    elif order[0] == 'B' :
        b = b + int(menu[order[1]]) * int(order[2])
    elif order[0] == 'C' :
        c = c + int(menu[order[1]]) * int(order[2])
    elif order[0] == 'K' :
        k = k + int(menu[order[1]]) * int(order[2]) // 3
    else :
        print ('A',a + k)
        print ('B',b + k)
        print ('C',c + k)
        break


"""
좋아하는 숫자만 골라내기

알파벳과 숫자가 섞인 문자열에서 특정 숫자를 골라내는 프로그램을 제작하려고 합니다.

지시사항을 따라 프로그램을 완성하세요.


지시사항
이 프로그램은 문자열에서 0,1,4을 제외한 숫자를 골라서 리스트로 출력하는 프로그램입니다.

동작순서
1. 사용자로부터 문자열을 입력받습니다.

2. 문자열을 첫번째 문자부터 순서대로 보면서 좋하하는 숫자 목록인 num_tuple에 포함된 숫자라면 리스트 result에 추가합니다.

3. 완성된 리스트 result를 출력합니다.

4. 단 result에 숫자가 5개가 되면 그대로 출력합니다.
"""
num_tuple = ('2','3','5','6','7','8','9')

result = []

text = input()

n = 0 #num_tuple의 index

for i in text :
    for j in num_tuple :
        if i == j :
            result.append(i)
        n = n + 1
    if len(result) == 5 :
        break
    
print(result) #완성된 result 출력 (지시사항 3번)


"""
잘린 피라미드 만들기
여러분 모두 반복문을 배우면서 많은 피라미드를 만들어보셨을 겁니다.

이번에는 중간부터 시작하는 조금 독특한 잘린 피라미드를 만들어보려고 합니다.

잘린 피라미드는 다음과 같은 피라미드를 의미합니다.

***
****
*****
******

위의 피라미드는 *3개부터 시작해서 *6개로 끝나는 피라미드네요!

아래 조건을 모두 만족하는 피라미드를 만드는 프로그램을 완성하세요


지시사항

동작과정
1. 사용자는 숫자 2개를 다음과 같이 입력합니다.
4,8

2. 1번에서 4,8의 의미는 4개로 시작해서 8개로 끝나는 피라미드라는 의미입니다.

3. 2번에서 해석한 그대로 아래처럼 *로 구성된 피라미드를 출력하시면 됩니다.

****
*****
******
*******
********

단, 피라미드가 길어지면 다음줄로 넘어갈 수 있어서 피라미드의 최대 폭은 15로 제한합니다. 즉, 사용자가 4,100이라는 입력을 해도 우리는 4,15라는 피라미드를 그릴 겁니다.

주의사항
1. 우리는 뒤집힌 피라미드는 허용하지 않을려고 합니다. 만약에 사용자가 14,2처럼 첫번째 수를 더 크게하거나 2,2처럼 두 숫자가 같게 입력하면 오류라고 출력합니다.

# 첫번째 수가 두번째수보다 같거나 크면
print("오류")

자연스럽게 첫번째 수가 15보다 같거나 더 커도 안되겠죠? 그럴경우 역시 오류를 출력합니다.
"""
text = input()

start = int(text.split(',')[0])
end = int(text.split(',')[1])

star = start
for i in range(end - start + 1) :
    if start >= end : 
        print('오류')
        break
    print('*' * star)
    star = star + 1
    if star > 15 :
        break