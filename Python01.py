# 1. print()

# print() : 문자열을 출력하는 명령어
print("Hello Rabbit!")
## 출력결과 ##
Hello Rabbit!

# 콤마(,)를 통해 여러 자료를 출력
print(3, "Hello")
## 출력결과 ##
3 Hello

# print()를 여러 번 사용하여 여러 줄에 걸쳐 출력
print(3)
print(6)
print(9)
## 출력결과 ##
3
6
9

# [실습1] 삼행시 짓기: print()
print("이지혜는")
print("지맘대로 행동하지만")
print("혜성처럼 등장한 멋진 신입.")


# 2. 기본 자료형

# 숫자형 : 숫자로 이루어진 자료형
3 : 정수
3.14 : 실수

# 문자열 : 문자, 혹은 문자들의 집합 - 큰따옴표("")/작은따옴표('')로 구분
'Hello'
'3.14'
"3.14"

# 리스트 : 여러 자료를 함께 보관하는 자료형 - 대괄호([])로 구분
[]
['a', 'b']
['a', 2]

# [실습2] 신비한 자료사전: 자료형
#숫자 50과 숫자 50을 더해서 출력해봅시다!
print(50+50)

#문자열 "50"과 문자열 "50"을 더해서 출력해봅시다!
print('50'+'50')

#리스트 [50]과 리스트 [50]을 더해서 출력해봅시다!
print([50]+[50])


# 3. 변수

# 변수 : 자료를 담는 그릇
# 변수 이름 = 자료
num = 10
name = "Michael"
grade = ['A', 'B+', 'A0']

# 변수 이름 : 숫자, 알파벳, 언더바(_) 등을 사용

# 금지 규칙

# 숫자로 시작하는 변수이름 금지
1st = 1000 #Error

# 숫자로만 구성된 변수 이름 금지
123 = "Hello!" #Error

# 파이썬 문법에서 이미 사용되는 단어(keyword, 예약어) 금지
for = 10 #Error

# 공백 문자( )와 연산자 사용 금지
I am = "groot" #Error
3+4 = 12 #Error

# [실습3] 그릇의 달인: 변수
# 변수에는 정수, 실수같은 숫자를 저장할 수 있고,
num1 = 1
num2 = 2 
# 영어나 한글같은 문자도 저장할 수 있어요.
character = 'a'

# 이런 문자들의 집합도 저장할 수 있고,
string = 'Python'

# 자료들을 여러 개 담을 수 있는 리스트 또한 저장할 수 있어요.
threeList = [1, 'a', 'Python']

# 여러분의 변수를 만들어 봅시다. my_var라는 이름의 변수를 만들고, 원하는 값을 넣어보세요!
my_var = 'Lizzie'

# 변수는 print()에 넣을 수도 있어요! my_var를 print로 출력해서 값이 잘 들어갔는지 확인해봅시다!
print(my_var)

# 변수끼리는 연산 또한 가능합니다. 예를들어, 위에 있는 num1, num2을 더하면?!
print(num1+num2)


# 4. 연산

# 숫자의 사칙연산 : +(더하기), -(뺴기), *(곱하기), /(나누기)
print(6+3) #9
print(6-3) #3
print(6*3) #18
print(6/3) #2.0

# [실습4] 알쏭달쏭 수수께끼: 사칙연산
#'Num1'이라는 변수를 하나 선언하고, 숫자 23571를 넣어줍시다.
Num1 = 23571

#'Num2'이라는 변수를 하나 선언하고, 'Num1'에 1024를 곱한 값을 넣어줍시다.
Num2 = Num1 * 1024

#'Num3'이라는 변수를 하나 선언하고, 'Num2'에 243을 나눈 값을 넣어줍시다.
Num3 = Num2 / 243

#'Num4'이라는 변수를 하나 선언하고, 'Num3'에 4927819을 더한 값을 넣어줍시다.
Num4 = Num3 + 4927819

#'Answer'이라는 변수를 하나 선언하고, 'Num4'에 829176을 뺀 값을 넣어줍시다.
Answer = Num4 - 829176

#지효에게 외쳐봅시다. '네가 생각한 답은 Answer원이야!'
print("네가 생각한 답은", Answer, "원이야!")


# 숫자의 특수연산 : **(제곱), //(몫 연산), %(나머지 연산)
print(6**3) #216
print(6//3) #2
print(6%3) #0

# [실습5] 거꾸로 계산기: 특수연산
# //을 이용해서 변수 intdiv에 4를 넣는 수식을 작성해봅시다.
intdiv = 21 // 5

# %을 이용해서 변수 modular에 1을 넣는 수식을 작성해봅시다.
modular = 7 % 3

# **을 이용해서 변수 expo에 16을 넣는 수식을 작성해봅시다.
expo = 2 ** 4

#위의 세 변수를 출력해서 확인해봅시다.
print(intdiv, modular, expo)


# 문자열의 연산 : +(연결하기), *(반복하기)
print("Hello" + "World") #HelloWorld
print("Hello"*3) #HelloHelloHello

# [실습6] 얼쑤! 자진모리 장단: 문자열연산
# 변수 connect_str를 선언하고, 연결 연산자를 이용해서 '덩덕쿵덕'를 넣어봅시다.
connect_str = '덩덕' + '쿵덕'

# 변수 iterate_str를 선언하고 반복 연산자를 이용해서 '쿵덕쿵덕'을 넣어봅시다.
iterate_str = '쿵덕' * 2

# 위 두 변수를 이용해서 '덩덕쿵덕쿵덕쿵덕덩덕쿵덕쿵덕쿵덕'을 변수 jajinmori에 넣어봅시다
jajinmori = (connect_str + iterate_str) * 2

print(connect_str, iterate_str, jajinmori)


# 인덱스 : 문자열과 리스트의 특정 원소의 위치, 0부터 시작!
"Hello"에서 H = Index 0, e = index 1, ...

# 인덱싱 : 문자열과 리스트의 특정 위치(인덱스)의 원소를 가져오는 것
greet = "Hello!"  
print(greet[1])  
## 출력결과 ##
e

# 슬라이싱 : 문자열과 리스트의 특정 부분을 가져오는 것
greet = "Hello!"  
print(greet[0:5])  
Hello

# 실습[7] 보석 훔치기: 인덱싱/슬라이싱
#dahyun가 가지고 있는 보석 중에 특별히 빛나는 보석이 있어요! 이를 훔쳐볼까요?
dahyun = ['은', '은', '다이아몬드', '은', '은', '은', '은', '은']

#이 가방에 한번 넣어봅시다!
stealBag1 = dahyun[2]

#tzuyu는 금빛 보석을 많이 가지고 있네요! 이도 한번 훔쳐볼까요?
tzuyu = ['은', '은', '은', '은', '금', '금', '금', '은', '은', '은']

#이 가방에 한번 넣어봅시다!
stealBag2 = tzuyu[4:7]

#여러분이 훔쳐온 보석은 무엇인지 print()를 이용해서 한번 확인해보세요!
print('dahyun로부터 훔쳐온 보석은', stealBag1)
print('tzuyu로부터 훔쳐온 보석은', stealBag2)


# [미션1] 별이 빛나는 밤이에요 !
"""
사진 속의 별 모양을 출력해봅시다!
다음과 같이 말이죠!

*
**
***
****
*****
"""

#친구에게 어제 봤던 별자리를 print()를 이용해서 보여줍시다!
print('*')
print('**')
print('***')
print('****')
print('*****')

# [미션2] 섭씨를 화씨로 변환해봅시다!
"""
[℉] = [℃] * (9/5) + 32

# ℉는 화씨, ℃는 섭씨
"""

#섭씨온도를 담을 변수 c를 선언하고, 숫자 18을 담아봅시다.
c = 18

#화씨온도를 담을 변수 f를 선언하고, c와 섭씨-화씨 변환식을 이용해서 값을 담아봅시다.
f = c * (9/5) + 32

#변수 today_temp를 선언하고, 섭씨온도 c와 화씨온도 f를 순서대로 담은 리스트를 담아봅시다.
today_temp = [c,f]

#맞게 변환했는지 today_temp를 print()로 확인해봅시다.
print(today_temp)