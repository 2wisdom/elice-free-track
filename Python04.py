1. 반복문
어떠한 조건이나 범위 내에서 어떠한 명령을 반복적으로 수행하는 것

2. for-sequence문
Point I
원소로 반복하는 방법
시퀀스의 원소를 하나씩 변수에 넣어가면서 명령 실행

nums = [1, 2, 3, 4, 5]
for i in nums:
    print(2*i)
        
## 실행 결과 ##
2
4
6
8
10
3. for - range()문
Point I
range() : 숫자 시퀀스를 만들어주는 함수

range(a, b) : a 이상 b 미만의 숫자 시퀀스를 만들어 줌
range(a) : 0이상 a미만의 숫자 시퀀스를 만들어줌
Point II
for-range(a, b): 범위로 반복 (a 이상 b 미만)

#1 이상 11 미만의 범위 반복
for i in range(1, 11): 
    print(i)
    
## 실행 결과 ##
1
2
...
9
10
Point III
for-range(a) : 횟수로 반복 (a번)

#5회 반복
for i in range(5): 
    print("안녕!")
        
## 실행 결과 ##
안녕!
안녕!
안녕!
안녕!
안녕!
4. while
Point I
while 조건 : 조건이 True(참)인 동안 명령 실행

num = []
i = 0
while len(num) < 5:
    num.append(i)
    i = i+1
print(num)

## 실행 결과 ##
[0, 1, 2, 3, 4]
Point II
조건이 True일 동안 명령을 수행하므로, 반복이 끝나도록 코드를 작성해야 함
조건식에 들어가는 변수 수정, break문 사용 등이 있음

i = 0
while True: #break가 없다면 무한루프!
    print(i)
    if i >= 10:
        break #i가 10보다 커지면 탈출!
    i = i + 1

## 실행 결과 ##
0
1
2
...
9
10

#[실습2] 쌀과 씰
# 쌀과 씰! 구분할 수 있나요?
# 변수 mix는 문자 쌀과 문자 씰이 혼합된 문자열입니다.쌀이 몇 개 있는지 알고 싶은데, 직접 세기에는 눈이 너무 아프겠죠? for과 sequence를 이용해서 쌀과 씰의 개수를 세봅시다!

## 변수 mix에 있는 "쌀"의 개수를 세봅시다.
mix = "쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰쌀씰쌀쌀씰쌀씰"

count = 0
for i in mix :
    if i == '쌀':
        count = count + 1
print(count)


#[실습5] 19단을 외자
# 19단을 외자!
# 초등학교 2학년, 삼일은 삼, 삼이는 육…
# 구구단을 열심히 외웠던 기억! 다들 있으신가요?
# 그런데 인도에서는 무려 19단까지 외운다고 해요!

# 하지만 우리는 19단을 할 줄 모르죠…
# for와 range를 이용해
# 이를 컴퓨터에게 대신 시켜봅시다!

#for-range()를 이용해서 19단을 전부 출력해봅시다!

for i in range(1,20) :
    print('19 *', i, '=', 19 * i)


#[실습7] 10년형에 처한다.
# 숙제를 밀린 당신, 10년형에 처합니다!
# 이곳은 코딩법정, 당신은 피의자의 자리에 앉아 있습니다.
# 죄목은 '파이썬태만죄', 다른 바쁜 일로 인해 파이썬을 소홀히 한 죄입니다.
# 오만가지 생각이 들고 있을때, 귀도 반 로섬 판사님께서 판결을 내리고 있습니다!

# “익숙함에 속아 소중한 것을 잃어버리다니, 딱하다! 징역 10년형에 처한다!”

# while문을 이용해서 10년형을 살고, 새 사람이 되어 나와봅시다!

#while을 이용해서 "i 년째 수감중입니다."를 출력해봅시다.
#while문이 종료된 후에는, "감옥에서 석방되었습니다!"를 출력해봅시다.

i = 1
while i < 11 :
    print(i,'년째 수감 중입니다.')
    i = i + 1
print('감옥에서 석방되었습니다!')


#[실습9] 위기탈출 넘버원

# break문으로 당신의 소중한 코드를 무한루프로부터 지킬 수 있습니다!

# 평소에도 코딩을 열심히 하던 준배. 그는 오늘도 엘리스에서 문제를 풀기 시작합니다.

# 그런데! 코드를 다 짜고 보니 코드가 멈추지 않고 계속 출력됩니다.

# 분명 맞게 작성한 것 같은데, 계속 ans가 출력이 안되는 걸 본 준배는 결국 혈압 상승으로 인해 응급실에 실려가게 되었습니다.

# 과연 무엇이 문제였을까요? 오른쪽 준배의 코드를 보고 잘못된 부분을 찾아 고쳐줍시다.

# 원래 문제

# while문을 이용해서 1부터 10까지의 합을 구해서 이를 출력해봅시다.

# 다음은 while True:를 이용하여 준배가 짠 코드입니다.
i = 1
ans = 0
while True:
    ans = ans + i
    if i == 10:
        print(ans)
        break
    i = i + 1
# 위 코드에서 잘못된 점을 찾아서 고쳐줍시다!
# 단, while True: 부분은 수정하면 안됩니다.

#[미션1]
# 계단 별자리가 점점 커지고있어요!
# 1장에서는 print()를 5번 사용해서 계단 별자리를 출력했었습니다. 이번에는 입력한 수에 따라 계단 별자리를 출력하는 프로그램을 작성해봅시다. 3을 입력하면 3층, 5를 입력하면 5층 계단 별자리를 말이죠!

star = int(input())

for i in range(star) :
    print('*' * (i + 1))


#[실습2]
# 평균 구하기!
# 평균을 쉽게 구할 수 있도록 평균을 구하는 프로그램을 작성해봅시다.

# while문을 이용해서, 0을 입력할 때 까지 입력을 받습니다. 0을 입력받았으면, 0을 입력한 바로 이전까지의 수들의 평균을 구합니다.

# Tip!

# 평균은 (자료의 합) / (자료의 크기) 입니다.

i = 1 #자료의 크기
sum = 0 # 자료의 합

while True :
    num = int(input()) #점수 입력
    sum = sum + num #자료의 합에 점수 입력
    if num == 0 :
        print(sum / (i - 1))
        break
    i = i + 1